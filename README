IRCLib Copyright Â© 2013 Elizabeth Myers. All rights reserved

1) Introduction
IRCLib is a Python IRC library for the 21st century and first decade. It is
designed with the needs of modern IRC in mind and also designed for maximum
flexibility whilst supporting major extensions built-in and many features that
users might consider desirable, such as user tracking.

This bot has been designed largely with IRCv3.1 in mind (http://ircv3.org).
Features of IRCv3.2 are mostly unimplemented (some limited parsing ability
exists for message tags) but probably will be at some indeterminate point.

The library presently supports the following:
- STARTTLS
- Message tags (only removing them and storing them, no parsing)
- SASL, PLAIN auth only right now (yes, it works correctly with STARTTLS)
- CAP (follows from SASL and STARTTLS)
- Server passwords (you'd be surprised how many don't support this...)
- Timers (timed events)
- Dynamic dispatch

2) Design
IRCLib is primarily designed with blocking I/O in mind, as that is the simplest
paradigm to program for (and most common). Non-blocking operation is supported;
simply call IRCClient.process_in when recieves are ready, and IRCClient.send
with no parameters to flush the buffer when sends are ready. Check the buffer
(client.send_buffer) to determine whether or not to send; if it has data, then
you need to send data at some point when the socket is ready.

The Python threading.Timer module is used but can be easily swapped for any
other form of asynchronous timers.

The library is at some point going to also speak TS6, hence common/ and client/.
It is provided a server/ will eventually exist.

3) Bugs
Probably many! Tell me about them

4) Support
Try irc.interlinked.me #irclib. :)

5) License
Licensed under the WTFPL; terms and conditions can be found at:

	http://www.wtfpl.net/about/

